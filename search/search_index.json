{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dyve Dyve is a vendor-agnostic unified interface for all your platforms, CI and monitoring tools. In its basic form, Dyve allows platform operators to bundle their used tools into one solution, providing a great developer experience to their teams. Dyve is fully extensible for more complex use-cases or tools that are not yet supported out of the box. Demo Run the demo to evaluate dyve. Install See this page for available installation methods.","title":"Overview"},{"location":"#dyve","text":"Dyve is a vendor-agnostic unified interface for all your platforms, CI and monitoring tools. In its basic form, Dyve allows platform operators to bundle their used tools into one solution, providing a great developer experience to their teams. Dyve is fully extensible for more complex use-cases or tools that are not yet supported out of the box.","title":"Dyve"},{"location":"#demo","text":"Run the demo to evaluate dyve.","title":"Demo"},{"location":"#install","text":"See this page for available installation methods.","title":"Install"},{"location":"configure/","text":"","title":"Index"},{"location":"extend/","text":"","title":"Index"},{"location":"install/","text":"Install","title":"Install"},{"location":"install/#install","text":"","title":"Install"},{"location":"install/binaries/","text":"Binaries The releases with binaries attached can be found here . We provide binaries for the following Operating systems / architectures: linux 32-bit linux 64-bit linux arm64 macOS 64-bit macOS arm64 windows 32-bit windows 64-bit","title":"Binaries"},{"location":"install/binaries/#binaries","text":"The releases with binaries attached can be found here . We provide binaries for the following Operating systems / architectures: linux 32-bit linux 64-bit linux arm64 macOS 64-bit macOS arm64 windows 32-bit windows 64-bit","title":"Binaries"},{"location":"install/docker/","text":"Docker If you can't use the installation method via helm , you can also directly use the docker images. They are available at: dyve-core : ghcr.io/joscha-alisch/dyve-core:latest dyve-frontend : ghcr.io/joscha-alisch/dyve-frontend:latest The full list of images, together with available tags can be found here.","title":"Docker"},{"location":"install/docker/#docker","text":"If you can't use the installation method via helm , you can also directly use the docker images. They are available at: dyve-core : ghcr.io/joscha-alisch/dyve-core:latest dyve-frontend : ghcr.io/joscha-alisch/dyve-frontend:latest The full list of images, together with available tags can be found here.","title":"Docker"},{"location":"install/helm/","text":"Helm We provide a helm chart to deploy dyve into your kubernetes cluster. Install Helm In order to use the helm chart, you will need helm installed and configured to use your kubernetes cluster. You can find the instructions here. With helm installed, add the repository: helm repo add dyve https://joscha-alisch.github.io/dyve helm repo update and install the chart: helm upgrade --install -n dyve dyve dyve/dyve Configuration In order to set configuration parameters, create a values.yaml and specify it when installing the chart: helm upgrade --install -f values.yaml -n dyve dyve dyve/dyve The following shows the available options together with its default values: values.yaml core : image : repository : ghcr.io/joscha-alisch/dyve-core tag : main pullPolicy : Always args : - \"--config\" - \"/app/config.yaml\" config : port : 8080 database : uri : mongodb://dyve-mongodb:27017 name : core frontend : image : repository : ghcr.io/joscha-alisch/dyve-frontend tag : main pullPolicy : Always ingress : enabled : false providers : cloudfoundry : enabled : false image : repository : ghcr.io/joscha-alisch/dyve-provider-cf tag : main pullPolicy : Always config : port : 8080 database : uri : mongodb://dyve-mongodb:27017 name : provider_cf mongodb : enabled : true auth : enabled : false","title":"Helm"},{"location":"install/helm/#helm","text":"We provide a helm chart to deploy dyve into your kubernetes cluster. Install Helm In order to use the helm chart, you will need helm installed and configured to use your kubernetes cluster. You can find the instructions here. With helm installed, add the repository: helm repo add dyve https://joscha-alisch.github.io/dyve helm repo update and install the chart: helm upgrade --install -n dyve dyve dyve/dyve","title":"Helm"},{"location":"install/helm/#configuration","text":"In order to set configuration parameters, create a values.yaml and specify it when installing the chart: helm upgrade --install -f values.yaml -n dyve dyve dyve/dyve The following shows the available options together with its default values: values.yaml core : image : repository : ghcr.io/joscha-alisch/dyve-core tag : main pullPolicy : Always args : - \"--config\" - \"/app/config.yaml\" config : port : 8080 database : uri : mongodb://dyve-mongodb:27017 name : core frontend : image : repository : ghcr.io/joscha-alisch/dyve-frontend tag : main pullPolicy : Always ingress : enabled : false providers : cloudfoundry : enabled : false image : repository : ghcr.io/joscha-alisch/dyve-provider-cf tag : main pullPolicy : Always config : port : 8080 database : uri : mongodb://dyve-mongodb:27017 name : provider_cf mongodb : enabled : true auth : enabled : false","title":"Configuration"},{"location":"install/demo/","text":"Demo To run the demo, you need docker and docker-compose installed on your machine. Copy the files core.yaml docker-compose.yaml from below to your machine and run docker-compose up in the same directory. Open http://localhost:8080 , to see dyve in action! core.yaml providers : - id : demo name : Demo host : http://demo:9003 features : - apps - pipelines auth : secret : secret database : uri : mongodb://mongo:27017 externalUrl : http://localhost:9001/ devConfig : useFakeOauth2 : false docker-compose.yaml version : \"3\" services : mongo : image : mongo restart : always networks : - shared ui : image : ghcr.io/joscha-alisch/dyve-frontend:next restart : always environment : DYVE_API_BACKEND : \"core:9000\" ports : - \"8080:80\" networks : - shared core : image : ghcr.io/joscha-alisch/dyve-core:next restart : always environment : DYVE_DEVCONFIG_USEFAKEOAUTH2 : true DYVE_AUTH_SECRET : secret DYVE_DATABASE_URI : mongodb://mongo:27017 DYVE_EXTERNALURL : http://localhost:8080 ports : - \"8000:8000\" networks : - shared volumes : - ./core.yaml:/app/config.yaml demo : image : ghcr.io/joscha-alisch/dyve-provider-demo:next restart : always networks : - shared networks : shared : driver : bridge","title":"Demo"},{"location":"install/demo/#demo","text":"To run the demo, you need docker and docker-compose installed on your machine. Copy the files core.yaml docker-compose.yaml from below to your machine and run docker-compose up in the same directory. Open http://localhost:8080 , to see dyve in action! core.yaml providers : - id : demo name : Demo host : http://demo:9003 features : - apps - pipelines auth : secret : secret database : uri : mongodb://mongo:27017 externalUrl : http://localhost:9001/ devConfig : useFakeOauth2 : false docker-compose.yaml version : \"3\" services : mongo : image : mongo restart : always networks : - shared ui : image : ghcr.io/joscha-alisch/dyve-frontend:next restart : always environment : DYVE_API_BACKEND : \"core:9000\" ports : - \"8080:80\" networks : - shared core : image : ghcr.io/joscha-alisch/dyve-core:next restart : always environment : DYVE_DEVCONFIG_USEFAKEOAUTH2 : true DYVE_AUTH_SECRET : secret DYVE_DATABASE_URI : mongodb://mongo:27017 DYVE_EXTERNALURL : http://localhost:8080 ports : - \"8000:8000\" networks : - shared volumes : - ./core.yaml:/app/config.yaml demo : image : ghcr.io/joscha-alisch/dyve-provider-demo:next restart : always networks : - shared networks : shared : driver : bridge","title":"Demo"},{"location":"providers/","text":"","title":"Index"},{"location":"providers/auth/github/","text":"","title":"GitHub"},{"location":"providers/ci/concourse/","text":"","title":"Concourse"},{"location":"providers/monitoring/","text":"","title":"Index"},{"location":"providers/platform/cloudfoundry/","text":"","title":"CloudFoundry"}]}