{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello world! :)","title":"Overview"},{"location":"#hello-world","text":"","title":"Hello world! :)"},{"location":"configure/","text":"","title":"Index"},{"location":"extend/","text":"","title":"Index"},{"location":"install/","text":"Install","title":"Install"},{"location":"install/#install","text":"","title":"Install"},{"location":"install/binaries/","text":"","title":"Binaries"},{"location":"install/docker/","text":"","title":"Docker"},{"location":"install/helm/","text":"Helm We provide a helm chart to deploy dyve into your kubernetes cluster. Install Helm In order to use the helm chart, you will need helm installed and configured to use your kubernetes cluster. You can find the instructions here. With helm installed, add the repository: helm repo add dyve https://joscha-alisch.github.io/dyve helm repo update and install the chart: helm upgrade --install -n dyve dyve dyve/dyve Configuration In order to set configuration parameters, create a values.yaml and specify it when installing the chart: helm upgrade --install -f values.yaml -n dyve dyve dyve/dyve The following shows the available options together with its default values: values.yaml","title":"Helm"},{"location":"install/helm/#helm","text":"We provide a helm chart to deploy dyve into your kubernetes cluster. Install Helm In order to use the helm chart, you will need helm installed and configured to use your kubernetes cluster. You can find the instructions here. With helm installed, add the repository: helm repo add dyve https://joscha-alisch.github.io/dyve helm repo update and install the chart: helm upgrade --install -n dyve dyve dyve/dyve","title":"Helm"},{"location":"install/helm/#configuration","text":"In order to set configuration parameters, create a values.yaml and specify it when installing the chart: helm upgrade --install -f values.yaml -n dyve dyve dyve/dyve The following shows the available options together with its default values: values.yaml","title":"Configuration"},{"location":"install/demo/","text":"Demo To run the demo, you need docker and docker-compose installed on your machine. Copy the files core.yaml docker-compose.yaml from below to your machine and run docker-compose up in the same directory. Open http://localhost:8080 , to see dyve in action! core.yaml providers : - id : demo name : Demo host : http://demo:9003 features : - apps - pipelines auth : secret : secret database : uri : mongodb://mongo:27017 externalUrl : http://localhost:9001/ devConfig : useFakeOauth2 : false docker-compose.yaml version : \"3\" services : mongo : image : mongo restart : always networks : - shared ui : image : ghcr.io/joscha-alisch/dyve-frontend:next restart : always environment : DYVE_API_BACKEND : \"core:9000\" ports : - \"8080:80\" networks : - shared core : image : ghcr.io/joscha-alisch/dyve-core:next restart : always environment : DYVE_DEVCONFIG_USEFAKEOAUTH2 : true DYVE_AUTH_SECRET : secret DYVE_DATABASE_URI : mongodb://mongo:27017 DYVE_EXTERNALURL : http://localhost:8080 ports : - \"8000:8000\" networks : - shared volumes : - ./core.yaml:/app/config.yaml demo : image : ghcr.io/joscha-alisch/dyve-provider-demo:next restart : always networks : - shared networks : shared : driver : bridge","title":"Demo"},{"location":"install/demo/#demo","text":"To run the demo, you need docker and docker-compose installed on your machine. Copy the files core.yaml docker-compose.yaml from below to your machine and run docker-compose up in the same directory. Open http://localhost:8080 , to see dyve in action! core.yaml providers : - id : demo name : Demo host : http://demo:9003 features : - apps - pipelines auth : secret : secret database : uri : mongodb://mongo:27017 externalUrl : http://localhost:9001/ devConfig : useFakeOauth2 : false docker-compose.yaml version : \"3\" services : mongo : image : mongo restart : always networks : - shared ui : image : ghcr.io/joscha-alisch/dyve-frontend:next restart : always environment : DYVE_API_BACKEND : \"core:9000\" ports : - \"8080:80\" networks : - shared core : image : ghcr.io/joscha-alisch/dyve-core:next restart : always environment : DYVE_DEVCONFIG_USEFAKEOAUTH2 : true DYVE_AUTH_SECRET : secret DYVE_DATABASE_URI : mongodb://mongo:27017 DYVE_EXTERNALURL : http://localhost:8080 ports : - \"8000:8000\" networks : - shared volumes : - ./core.yaml:/app/config.yaml demo : image : ghcr.io/joscha-alisch/dyve-provider-demo:next restart : always networks : - shared networks : shared : driver : bridge","title":"Demo"},{"location":"providers/","text":"","title":"Index"},{"location":"providers/auth/github/","text":"","title":"GitHub"},{"location":"providers/ci/concourse/","text":"","title":"Concourse"},{"location":"providers/monitoring/","text":"","title":"Index"},{"location":"providers/platform/cloudfoundry/","text":"","title":"CloudFoundry"}]}